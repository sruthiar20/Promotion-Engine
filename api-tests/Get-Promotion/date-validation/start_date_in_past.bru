meta {
  name: start_date_in_past_validation
  type: http
  seq: 2
}

post {
  url: http://localhost:8080/admin/promotions
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Accept: application/json
}

body:json {
  {
    "code": "past_date_001",
    "type": "percentage",
    "value": 10,
    "value_type": "percentage",
    "starts_at": "{{past_date}}",
    "ends_at": "{{future_date}}",
    "is_automatic": false,
    "usage_limit": 100
  }
}


script:pre-request {
  // Set start date to 7 days ago (past date)
  const past_date = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
  bru.setVar("past_date", past_date.toISOString());
  
  // Set end date to 30 days from now (future date)
  const future_date = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000);
  bru.setVar("future_date", future_date.toISOString());
}

assert {
  res.status: eq 400
}

tests {
  test("2.1 Should reject promotion with start date in past", function() {
    expect(res.status).to.equal(400,
      "Expected 400 Bad Request status for past start date");
  });
  
  test("2.2 Should return appropriate error message and field", function() {
    expect(res.body.type).to.equal("validation_error");
  });
    
  test("2.4 Should validate that start date is in the past", function() {
    const past_date = bru.getVar("past_date");
    const past_date_obj = new Date(past_date);
    const now = new Date();
    
    expect(past_date_obj.getTime()).to.be.lessThan(now.getTime(),
      "Start date should be in the past");
  });
  
  test("2.5 Should validate that end date is in the future", function() {
    const future_date = bru.getVar("future_date");
    const future_date_obj = new Date(future_date);
    const now = new Date();
    
    expect(future_date_obj.getTime()).to.be.greaterThan(now.getTime(),
      "End date should be in the future");
  });
  
  test("2.6 Should validate promotion type and value", function() {
    // This test ensures our request data is valid except for the date issue
    expect(10).to.be.within(1, 100, "Percentage value should be valid (1-100)");
  });
}
